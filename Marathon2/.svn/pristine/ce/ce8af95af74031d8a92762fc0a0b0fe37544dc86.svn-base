package gui.windows;

import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.time.LocalDateTime;
import java.util.Set;

import javax.swing.DefaultListModel;

import gui.MessengerGUI;
import gui.dialogues.groupChatDisconnected;
import message.Message;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author violamarku
 */
public class groupChat extends javax.swing.JFrame implements ChatWindow {
	
	private MessengerGUI gui;
	private Set<String> members;
	private groupChat thisGroupChat = this;
	private boolean closed;
	private DefaultListModel<String> listModel;
    private javax.swing.JTextArea chatPanel;
    private javax.swing.JTextArea chatTextArea;
    private javax.swing.JLabel chatWithLabel;
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton sendMessage;
	
    /**
     * Creates new form userChat
     */
    public groupChat(MessengerGUI gui, Set<String> members, java.awt.Frame parent, boolean modal) {
        this.gui = gui;
        this.members = members;
        this.listModel = new DefaultListModel<String>();
        for(String member :  members) {
        	listModel.addElement(member);
        }        
    	initComponents();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        chatTextArea = new javax.swing.JTextArea();
        sendMessage = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        chatPanel = new javax.swing.JTextArea();
        chatWithLabel = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>(listModel);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Group Chat: " + members.toString());
        setLocation(new java.awt.Point(1050, 23));
        setResizable(false);
        setType(java.awt.Window.Type.POPUP);

        chatTextArea.setColumns(20);
        chatTextArea.setRows(5);
        jScrollPane1.setViewportView(chatTextArea);

        sendMessage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui/images/1489283472_telegram.png"))); // NOI18N
        sendMessage.setBorder(null);
        sendMessage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendMessageActionPerformed(evt);
            }
        });

        chatPanel.setEditable(false);
        chatPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane2.setViewportView(chatPanel);

        chatWithLabel.setText("Chat");

        jScrollPane3.setViewportView(jList1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chatWithLabel)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(sendMessage))
                            .addComponent(jScrollPane2))))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(chatWithLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(sendMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(25, 25, 25))
        );
        
        this.addWindowListener(new WindowAdapter()
        {
            public void windowClosing(WindowEvent e)
            {
                if(!closed) {
                	gui.getClient().closeGroupChat(members);
                	gui.deregisterGroupChat(thisGroupChat);
                }
            }
        });

        pack();
    }

    private void sendMessageActionPerformed(java.awt.event.ActionEvent evt) {
    	// Get the message from the text field
    	String text = chatTextArea.getText();
    	if(text.equals("")) {return;}
    	chatTextArea.setText("");
    	Message message = new Message(gui.getUser(), members, LocalDateTime.now(), text);
    	gui.getClient().sendMessage(message);
    }
    
    public void displayMessage(Message message) {
    	chatPanel.append(message.toString());
    }
    
    public void handleClosingEvent() {
    	closed = true;
    	groupChatDisconnected dialogue = new groupChatDisconnected(this, true);
    	dialogue.setVisible(true);
    	gui.deregisterGroupChat(this);
    }
	@Override
	public Set<String> getMembers() {
		return members;
	}
	@Override
	public void close() {
		this.dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
	}

}
